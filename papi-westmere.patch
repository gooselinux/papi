Index: src/papi_events.csv
===================================================================
RCS file: /cvs/homes/papi/papi/src/papi_events.csv,v
retrieving revision 1.9
diff -u -r1.9 papi_events.csv
--- src/papi_events.csv	20 Apr 2010 19:45:22 -0000	1.9
+++ src/papi_events.csv	14 Jul 2010 14:50:10 -0000
@@ -279,6 +279,69 @@
 #PRESET,PAPI_FDV_INS,NOT_DERIVED,DIV
 #PRESET,PAPI_VEC_INS,NOT_DERIVED,SIMD_INST_RETIRED:VECTOR
 #
+CPU,Intel Westmere
+#
+PRESET,PAPI_L1_ICM,NOT_DERIVED,L1I:MISSES
+PRESET,PAPI_L1_ICA,NOT_DERIVED,L1I:READS
+PRESET,PAPI_L1_ICH,NOT_DERIVED,L1I:HITS
+PRESET,PAPI_L1_DCM,NOT_DERIVED,L1D:REPL
+#PRESET,PAPI_L1_DCA,NOT_DERIVED,L1D_ALL_REF:ANY
+#PRESET,PAPI_L1_DCH,DERIVED_SUB,L1D_ALL_REF,L1D_REPL
+#PRESET,PAPI_L1_TCM,NOT_DERIVED,L2_RQSTS:SELF:MESI
+#PRESET,PAPI_L1_LDM,NOT_DERIVED,L2_LD:SELF:ANY:MESI
+#PRESET,PAPI_L1_STM,NOT_DERIVED,L2_ST:SELF:MESI
+#PRESET,PAPI_L1_TCA,DERIVED_ADD,L1D_ALL_REF,L1I_READS
+PRESET,PAPI_L2_DCM,DERIVED_SUB,L2_RQSTS:MISS, L2_RQSTS:IFETCH_MISS
+PRESET,PAPI_L2_ICM,NOT_DERIVED,L2_RQSTS:IFETCH_MISS
+PRESET,PAPI_L2_TCM,NOT_DERIVED,L2_RQSTS:MISS
+#PRESET,PAPI_L2_LDM,DERIVED_SUB,L2_LINES_IN:SELF:ANY,L2_M_LINES_IN:SELF
+#PRESET,PAPI_L2_STM,NOT_DERIVED,L2_M_LINES_IN:SELF
+PRESET,PAPI_L2_DCA,NOT_DERIVED,L2_DATA_RQSTS:ANY
+PRESET,PAPI_L2_DCR,DERIVED_SUB,L2_RQSTS:LOADS, L2_RQSTS:IFETCHES
+#PRESET,PAPI_L2_DCW,NOT_DERIVED,L2_ST:SELF:MESI
+PRESET,PAPI_L2_ICH,NOT_DERIVED,L2_RQSTS:IFETCH_HIT
+PRESET,PAPI_L2_ICA,NOT_DERIVED,L2_RQSTS:IFETCHES
+PRESET,PAPI_L2_TCH,DERIVED_SUB,L2_RQSTS:REFERENCES, L2_RQSTS:MISS
+PRESET,PAPI_L2_TCA,NOT_DERIVED,L2_RQSTS:REFERENCES
+PRESET,PAPI_L2_TCR,NOT_DERIVED,L2_RQSTS:LOADS
+#PRESET,PAPI_L2_TCW,NOT_DERIVED,L2_ST:SELF:MESI
+#
+#PRESET,PAPI_CA_SHR,NOT_DERIVED,L2_RQSTS:SELF:ANY:S_STATE
+#PRESET,PAPI_CA_CLN,NOT_DERIVED,BUS_TRANS_RFO:SELF
+#PRESET,PAPI_CA_ITV,NOT_DERIVED,BUS_TRANS_INVAL:SELF
+#
+PRESET,PAPI_TLB_IM,NOT_DERIVED,ITLB_MISSES:ANY
+PRESET,PAPI_TLB_DM,NOT_DERIVED,DTLB_MISSES:ANY
+PRESET,PAPI_TLB_TL,DERIVED_ADD,ITLB_MISSES:ANY, DTLB_MISSES:ANY
+#
+PRESET,PAPI_BR_TKN,NOT_DERIVED,BR_INST_EXEC:TAKEN
+PRESET,PAPI_BR_NTK,DERIVED_SUB,BR_INST_EXEC:ANY, BR_INST_EXEC:TAKEN
+PRESET,PAPI_BR_INS,NOT_DERIVED,BR_INST_EXEC:ANY
+PRESET,PAPI_BR_MSP,NOT_DERIVED,BR_MISP_EXEC:ANY
+PRESET,PAPI_BR_CN,NOT_DERIVED,BR_INST_EXEC:COND
+PRESET,PAPI_BR_UCN,NOT_DERIVED,BR_INST_EXEC:DIRECT
+PRESET,PAPI_BR_PRC,DERIVED_SUB,BR_INST_EXEC:COND, BR_MISP_EXEC:COND
+#
+PRESET,PAPI_TOT_IIS,NOT_DERIVED,MACRO_INSTS:DECODED
+#PRESET,PAPI_HW_INT,NOT_DERIVED,HW_INT_RCV
+PRESET,PAPI_RES_STL,NOT_DERIVED,RESOURCE_STALLS:ANY
+#
+PRESET,PAPI_FP_INS,NOT_DERIVED,FP_COMP_OPS_EXE:SSE_FP
+# PRESET,PAPI_FP_OPS,NOT_DERIVED,FP_COMP_OPS_EXE:SSE_FP
+# PAPI_FP_OPS counts single and double precision SCALAR operations
+# PRESET,PAPI_FP_OPS,NOT_DERIVED,FP_COMP_OPS_EXE:SSE_SINGLE_PRECISION:SSE_DOUBLE_PRECISION
+# According to Stephane (Jan 2010), it's not allowed to combine unit masks for FP_COMP_OPS_EXE;
+# we have to use two counters instead
+PRESET,PAPI_FP_OPS,DERIVED_ADD,FP_COMP_OPS_EXE:SSE_SINGLE_PRECISION,FP_COMP_OPS_EXE:SSE_DOUBLE_PRECISION
+# PAPI_SP_OPS = single precision scalar ops + 3 * packed ops
+PRESET,PAPI_SP_OPS,DERIVED_POSTFIX,N0|N1|3|*|+|,FP_COMP_OPS_EXE:SSE_SINGLE_PRECISION,FP_COMP_OPS_EXE:SSE_FP_PACKED
+PRESET,PAPI_DP_OPS,DERIVED_ADD,FP_COMP_OPS_EXE:SSE_DOUBLE_PRECISION,FP_COMP_OPS_EXE:SSE_FP_PACKED
+PRESET,PAPI_VEC_SP,NOT_DERIVED,FP_COMP_OPS_EXE:SSE_FP_PACKED
+PRESET,PAPI_VEC_DP,NOT_DERIVED,FP_COMP_OPS_EXE:SSE_FP_PACKED
+#PRESET,PAPI_FML_INS,NOT_DERIVED,MUL
+#PRESET,PAPI_FDV_INS,NOT_DERIVED,DIV
+#PRESET,PAPI_VEC_INS,NOT_DERIVED,SIMD_INST_RETIRED:VECTOR
+#
 CPU,Intel Core2
 CPU,Intel Core,34
 CPU,Intel Core,36
